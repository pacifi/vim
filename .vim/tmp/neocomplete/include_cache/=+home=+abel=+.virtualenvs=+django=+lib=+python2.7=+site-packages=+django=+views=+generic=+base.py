[{'word': 'ContextMixin', 'menu': '[I]', 'kind': 'c', 'abbr': 'ContextMixin(object): <class>'}, {'word': 'RedirectView', 'menu': '[I]', 'kind': 'c', 'abbr': 'RedirectView(View): <class>'}, {'word': 'TemplateResponseMixin', 'menu': '[I]', 'kind': 'c', 'abbr': 'TemplateResponseMixin(object): <class>'}, {'word': 'TemplateView', 'menu': '[I]', 'kind': 'c', 'abbr': 'TemplateView(TemplateResponseMixin, ContextMixin, View): <class>'}, {'word': 'View', 'menu': '[I]', 'kind': 'c', 'abbr': 'View(object): <class>'}, {'word': '__init__', 'menu': 'View', 'kind': 'm', 'abbr': 'def __init__(self, **kwargs):'}, {'word': '_allowed_methods', 'menu': 'View', 'kind': 'm', 'abbr': 'def _allowed_methods(self):'}, {'word': 'as_view', 'menu': 'View', 'kind': 'm', 'abbr': 'def as_view(cls, **initkwargs):'}, {'word': 'content_type', 'menu': 'TemplateResponseMixin', 'kind': 'v', 'abbr': 'content_type = None'}, {'word': 'delete', 'menu': 'RedirectView', 'kind': 'm', 'abbr': 'def delete(self, request, *args, **kwargs):'}, {'word': 'dispatch', 'menu': 'View', 'kind': 'm', 'abbr': 'def dispatch(self, request, *args, **kwargs):'}, {'word': 'get', 'menu': 'RedirectView', 'kind': 'm', 'abbr': 'def get(self, request, *args, **kwargs):'}, {'word': 'get_context_data', 'menu': 'ContextMixin', 'kind': 'm', 'abbr': 'def get_context_data(self, **kwargs):'}, {'word': 'get_redirect_url', 'menu': 'RedirectView', 'kind': 'm', 'abbr': 'def get_redirect_url(self, *args, **kwargs):'}, {'word': 'get_template_names', 'menu': 'TemplateResponseMixin', 'kind': 'm', 'abbr': 'def get_template_names(self):'}, {'word': 'head', 'menu': 'RedirectView', 'kind': 'm', 'abbr': 'def head(self, request, *args, **kwargs):'}, {'word': 'http_method_names', 'menu': 'View', 'kind': 'v', 'abbr': 'http_method_names = [''get'', ''post'', ''put'', ''patch'', ''delete'', ''head'', ''options'', ''trace'']'}, {'word': 'http_method_not_allowed', 'menu': 'View', 'kind': 'm', 'abbr': 'def http_method_not_allowed(self, request, *args, **kwargs):'}, {'word': 'logger', 'menu': '[I]', 'kind': 'v', 'abbr': 'logger = logging.getLogger(''django.request'')'}, {'word': 'options', 'menu': 'RedirectView', 'kind': 'm', 'abbr': 'def options(self, request, *args, **kwargs):'}, {'word': 'patch', 'menu': 'RedirectView', 'kind': 'm', 'abbr': 'def patch(self, request, *args, **kwargs):'}, {'word': 'pattern_name', 'menu': 'RedirectView', 'kind': 'v', 'abbr': 'pattern_name = None'}, {'word': 'permanent', 'menu': 'RedirectView', 'kind': 'v', 'abbr': 'permanent = True'}, {'word': 'post', 'menu': 'RedirectView', 'kind': 'm', 'abbr': 'def post(self, request, *args, **kwargs):'}, {'word': 'put', 'menu': 'RedirectView', 'kind': 'm', 'abbr': 'def put(self, request, *args, **kwargs):'}, {'word': 'query_string', 'menu': 'RedirectView', 'kind': 'v', 'abbr': 'query_string = False'}, {'word': 'render_to_response', 'menu': 'TemplateResponseMixin', 'kind': 'm', 'abbr': 'def render_to_response(self, context, **response_kwargs):'}, {'word': 'response_class', 'menu': 'TemplateResponseMixin', 'kind': 'v', 'abbr': 'response_class = TemplateResponse'}, {'word': 'template_name', 'menu': 'TemplateResponseMixin', 'kind': 'v', 'abbr': 'template_name = None'}, {'word': 'url', 'menu': 'RedirectView', 'kind': 'v', 'abbr': 'url = None'}, {'word': 'view', 'menu': '[I]', 'kind': 'f', 'abbr': 'def view(request, *args, **kwargs):'}]
