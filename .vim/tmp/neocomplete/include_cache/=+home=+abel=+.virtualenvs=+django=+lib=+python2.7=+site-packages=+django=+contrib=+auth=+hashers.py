[{'word': 'BCryptPasswordHasher', 'menu': '[I]', 'kind': 'c', 'abbr': 'BCryptPasswordHasher'}, {'word': 'BCryptSHA256PasswordHasher', 'menu': '[I]', 'kind': 'c', 'abbr': 'BCryptSHA256PasswordHasher'}, {'word': 'BasePasswordHasher', 'menu': '[I]', 'kind': 'c', 'abbr': 'BasePasswordHasher(object): <class>'}, {'word': 'CryptPasswordHasher', 'menu': '[I]', 'kind': 'c', 'abbr': 'CryptPasswordHasher(BasePasswordHasher): <class>'}, {'word': 'HASHERS', 'menu': '[I]', 'kind': 'v', 'abbr': 'HASHERS = None # lazily loaded from PASSWORD_HASHERS'}, {'word': 'MD5PasswordHasher', 'menu': '[I]', 'kind': 'c', 'abbr': 'MD5PasswordHasher'}, {'word': 'PBKDF2PasswordHasher', 'menu': '[I]', 'kind': 'c', 'abbr': 'PBKDF2PasswordHasher'}, {'word': 'PBKDF2SHA1PasswordHasher', 'menu': '[I]', 'kind': 'c', 'abbr': 'PBKDF2SHA1PasswordHasher'}, {'word': 'PREFERRED_HASHER', 'menu': '[I]', 'kind': 'v', 'abbr': 'PREFERRED_HASHER = None # defaults to first item in PASSWORD_HASHERS'}, {'word': 'SHA1PasswordHasher', 'menu': '[I]', 'kind': 'c', 'abbr': 'SHA1PasswordHasher'}, {'word': 'UNUSABLE_PASSWORD_PREFIX', 'menu': '[I]', 'kind': 'v', 'abbr': 'UNUSABLE_PASSWORD_PREFIX = ''!'' # This will never be a valid encoded hash'}, {'word': 'UNUSABLE_PASSWORD_SUFFIX_LENGTH', 'menu': '[I]', 'kind': 'v', 'abbr': 'UNUSABLE_PASSWORD_SUFFIX_LENGTH'}, {'word': 'UnsaltedMD5PasswordHasher', 'menu': '[I]', 'kind': 'c', 'abbr': 'UnsaltedMD5PasswordHasher'}, {'word': 'UnsaltedSHA1PasswordHasher', 'menu': '[I]', 'kind': 'c', 'abbr': 'UnsaltedSHA1PasswordHasher'}, {'word': '_load_library', 'menu': 'BasePasswordHasher', 'kind': 'm', 'abbr': 'def _load_library(self):'}, {'word': 'algorithm', 'menu': 'BCryptPasswordHasher', 'kind': 'v', 'abbr': 'algorithm = "bcrypt"'}, {'word': 'check_password', 'menu': '[I]', 'kind': 'f', 'abbr': 'def check_password(password, encoded, setter=None, preferred=''default''):'}, {'word': 'digest', 'menu': 'BCryptPasswordHasher', 'kind': 'v', 'abbr': 'digest = None'}, {'word': 'encode', 'menu': 'BCryptSHA256PasswordHasher', 'kind': 'm', 'abbr': 'def encode(self, password, salt):'}, {'word': 'get_hasher', 'menu': '[I]', 'kind': 'f', 'abbr': 'def get_hasher(algorithm=''default''):'}, {'word': 'identify_hasher', 'menu': '[I]', 'kind': 'f', 'abbr': 'def identify_hasher(encoded):'}, {'word': 'is_password_usable', 'menu': '[I]', 'kind': 'f', 'abbr': 'def is_password_usable(encoded):'}, {'word': 'iterations', 'menu': 'PBKDF2PasswordHasher', 'kind': 'v', 'abbr': 'iterations'}, {'word': 'library', 'menu': 'CryptPasswordHasher', 'kind': 'v', 'abbr': 'library = "crypt"'}, {'word': 'load_hashers', 'menu': '[I]', 'kind': 'f', 'abbr': 'def load_hashers(password_hashers=None):'}, {'word': 'make_password', 'menu': '[I]', 'kind': 'f', 'abbr': 'def make_password(password, salt=None, hasher=''default''):'}, {'word': 'mask_hash', 'menu': '[I]', 'kind': 'f', 'abbr': 'mask_hash'}, {'word': 'must_update', 'menu': 'BasePasswordHasher', 'kind': 'm', 'abbr': 'def must_update(self, encoded):'}, {'word': 'reset_hashers', 'menu': '[I]', 'kind': 'f', 'abbr': 'def reset_hashers(**kwargs):'}, {'word': 'rounds', 'menu': 'BCryptSHA256PasswordHasher', 'kind': 'v', 'abbr': 'rounds'}, {'word': 'safe_summary', 'menu': 'BCryptSHA256PasswordHasher', 'kind': 'm', 'abbr': 'def safe_summary(self, encoded):'}, {'word': 'salt', 'menu': 'BCryptSHA256PasswordHasher', 'kind': 'm', 'abbr': 'def salt(self):'}, {'word': 'verify', 'menu': 'BCryptSHA256PasswordHasher', 'kind': 'm', 'abbr': 'def verify(self, password, encoded):'}]
