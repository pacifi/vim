[{'word': 'AbstractManagerDescriptor', 'menu': '[I]', 'kind': 'c', 'abbr': 'AbstractManagerDescriptor(object): <class>'}, {'word': 'EmptyManager', 'menu': '[I]', 'kind': 'c', 'abbr': 'EmptyManager(Manager): <class>'}, {'word': 'Manager', 'menu': '[I]', 'kind': 'c', 'abbr': 'Manager(six.with_metaclass(RenameManagerMethods)): <class>'}, {'word': 'ManagerDescriptor', 'menu': '[I]', 'kind': 'c', 'abbr': 'ManagerDescriptor(object): <class>'}, {'word': 'RenameManagerMethods', 'menu': '[I]', 'kind': 'c', 'abbr': 'RenameManagerMethods(RenameMethodsBase): <class>'}, {'word': 'SwappedManagerDescriptor', 'menu': '[I]', 'kind': 'c', 'abbr': 'SwappedManagerDescriptor(object): <class>'}, {'word': '__init__', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def __init__(self):'}, {'word': '_copy_to_model', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def _copy_to_model(self, model):'}, {'word': '_insert', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def _insert(self, objs, fields, **kwargs):'}, {'word': '_set_creation_counter', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def _set_creation_counter(self):'}, {'word': '_update', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def _update(self, values, **kwargs):'}, {'word': 'aggregate', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def aggregate(self, *args, **kwargs):'}, {'word': 'all', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def all(self):'}, {'word': 'annotate', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def annotate(self, *args, **kwargs):'}, {'word': 'bulk_create', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def bulk_create(self, *args, **kwargs):'}, {'word': 'complex_filter', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def complex_filter(self, *args, **kwargs):'}, {'word': 'contribute_to_class', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def contribute_to_class(self, model, name):'}, {'word': 'count', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def count(self):'}, {'word': 'create', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def create(self, **kwargs):'}, {'word': 'creation_counter', 'menu': 'Manager', 'kind': 'v', 'abbr': 'creation_counter'}, {'word': 'dates', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def dates(self, *args, **kwargs):'}, {'word': 'datetimes', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def datetimes(self, *args, **kwargs):'}, {'word': 'db', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def db(self):'}, {'word': 'db_manager', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def db_manager(self, using):'}, {'word': 'defer', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def defer(self, *args, **kwargs):'}, {'word': 'distinct', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def distinct(self, *args, **kwargs):'}, {'word': 'earliest', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def earliest(self, *args, **kwargs):'}, {'word': 'ensure_default_manager', 'menu': '[I]', 'kind': 'f', 'abbr': 'def ensure_default_manager(sender, **kwargs):'}, {'word': 'exclude', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def exclude(self, *args, **kwargs):'}, {'word': 'exists', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def exists(self, *args, **kwargs):'}, {'word': 'extra', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def extra(self, *args, **kwargs):'}, {'word': 'filter', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def filter(self, *args, **kwargs):'}, {'word': 'first', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def first(self):'}, {'word': 'get', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def get(self, *args, **kwargs):'}, {'word': 'get_or_create', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def get_or_create(self, **kwargs):'}, {'word': 'get_queryset', 'menu': 'EmptyManager', 'kind': 'm', 'abbr': 'def get_queryset(self):'}, {'word': 'in_bulk', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def in_bulk(self, *args, **kwargs):'}, {'word': 'iterator', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def iterator(self, *args, **kwargs):'}, {'word': 'last', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def last(self):'}, {'word': 'latest', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def latest(self, *args, **kwargs):'}, {'word': 'none', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def none(self):'}, {'word': 'only', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def only(self, *args, **kwargs):'}, {'word': 'order_by', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def order_by(self, *args, **kwargs):'}, {'word': 'prefetch_related', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def prefetch_related(self, *args, **kwargs):'}, {'word': 'raw', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def raw(self, raw_query, params=None, *args, **kwargs):'}, {'word': 'renamed_methods', 'menu': 'RenameManagerMethods', 'kind': 'v', 'abbr': 'renamed_methods = ('}, {'word': 'reverse', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def reverse(self, *args, **kwargs):'}, {'word': 'select_for_update', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def select_for_update(self, *args, **kwargs):'}, {'word': 'select_related', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def select_related(self, *args, **kwargs):'}, {'word': 'update', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def update(self, *args, **kwargs):'}, {'word': 'using', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def using(self, *args, **kwargs):'}, {'word': 'values', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def values(self, *args, **kwargs):'}, {'word': 'values_list', 'menu': 'Manager', 'kind': 'm', 'abbr': 'def values_list(self, *args, **kwargs):'}]
