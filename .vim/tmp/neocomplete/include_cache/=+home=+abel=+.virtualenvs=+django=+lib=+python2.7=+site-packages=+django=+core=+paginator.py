[{'word': 'EmptyPage', 'menu': '[I]', 'kind': 'c', 'abbr': 'EmptyPage(InvalidPage): <class>'}, {'word': 'InvalidPage', 'menu': '[I]', 'kind': 'c', 'abbr': 'InvalidPage(Exception): <class>'}, {'word': 'Page', 'menu': '[I]', 'kind': 'c', 'abbr': 'Page(collections.Sequence): <class>'}, {'word': 'PageNotAnInteger', 'menu': '[I]', 'kind': 'c', 'abbr': 'PageNotAnInteger(InvalidPage): <class>'}, {'word': 'Paginator', 'menu': '[I]', 'kind': 'c', 'abbr': 'Paginator(object): <class>'}, {'word': 'QuerySetPaginator', 'menu': '[I]', 'kind': 'v', 'abbr': 'QuerySetPaginator = Paginator # For backwards-compatibility.'}, {'word': '__init__', 'menu': 'Page', 'kind': 'm', 'abbr': 'def __init__(self, object_list, number, paginator):'}, {'word': '_get_count', 'menu': 'Paginator', 'kind': 'm', 'abbr': 'def _get_count(self):'}, {'word': '_get_num_pages', 'menu': 'Paginator', 'kind': 'm', 'abbr': 'def _get_num_pages(self):'}, {'word': '_get_page', 'menu': 'Paginator', 'kind': 'm', 'abbr': 'def _get_page(self, *args, **kwargs):'}, {'word': '_get_page_range', 'menu': 'Paginator', 'kind': 'm', 'abbr': 'def _get_page_range(self):'}, {'word': 'count', 'menu': 'Paginator', 'kind': 'v', 'abbr': 'count = property(_get_count)'}, {'word': 'end_index', 'menu': 'Page', 'kind': 'm', 'abbr': 'def end_index(self):'}, {'word': 'has_next', 'menu': 'Page', 'kind': 'm', 'abbr': 'def has_next(self):'}, {'word': 'has_other_pages', 'menu': 'Page', 'kind': 'm', 'abbr': 'def has_other_pages(self):'}, {'word': 'has_previous', 'menu': 'Page', 'kind': 'm', 'abbr': 'def has_previous(self):'}, {'word': 'next_page_number', 'menu': 'Page', 'kind': 'm', 'abbr': 'def next_page_number(self):'}, {'word': 'num_pages', 'menu': 'Paginator', 'kind': 'v', 'abbr': 'num_pages = property(_get_num_pages)'}, {'word': 'page', 'menu': 'Paginator', 'kind': 'm', 'abbr': 'def page(self, number):'}, {'word': 'page_range', 'menu': 'Paginator', 'kind': 'v', 'abbr': 'page_range = property(_get_page_range)'}, {'word': 'previous_page_number', 'menu': 'Page', 'kind': 'm', 'abbr': 'def previous_page_number(self):'}, {'word': 'start_index', 'menu': 'Page', 'kind': 'm', 'abbr': 'def start_index(self):'}, {'word': 'validate_number', 'menu': 'Paginator', 'kind': 'm', 'abbr': 'def validate_number(self, number):'}]
