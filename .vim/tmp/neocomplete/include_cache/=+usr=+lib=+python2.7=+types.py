[{'word': 'BooleanType', 'menu': '[I]', 'kind': 'v', 'abbr': 'BooleanType = bool'}, {'word': 'BufferType', 'menu': '[I]', 'kind': 'v', 'abbr': 'BufferType = buffer'}, {'word': 'BuiltinFunctionType', 'menu': '[I]', 'kind': 'v', 'abbr': 'BuiltinFunctionType = type(len)'}, {'word': 'BuiltinMethodType', 'menu': '[I]', 'kind': 'v', 'abbr': 'BuiltinMethodType = type([].append) # Same as BuiltinFunctionType'}, {'word': 'ClassType', 'menu': '[I]', 'kind': 'v', 'abbr': 'ClassType = type(_C)'}, {'word': 'CodeType', 'menu': '[I]', 'kind': 'v', 'abbr': 'CodeType = type(_f.func_code)'}, {'word': 'ComplexType', 'menu': '[I]', 'kind': 'v', 'abbr': 'ComplexType = complex'}, {'word': 'DictProxyType', 'menu': '[I]', 'kind': 'v', 'abbr': 'DictProxyType = type(TypeType.__dict__)'}, {'word': 'EllipsisType', 'menu': '[I]', 'kind': 'v', 'abbr': 'EllipsisType = type(Ellipsis)'}, {'word': 'FileType', 'menu': '[I]', 'kind': 'v', 'abbr': 'FileType = file'}, {'word': 'FloatType', 'menu': '[I]', 'kind': 'v', 'abbr': 'FloatType = float'}, {'word': 'FrameType', 'menu': '[I]', 'kind': 'v', 'abbr': 'FrameType = type(tb.tb_frame)'}, {'word': 'FunctionType', 'menu': '[I]', 'kind': 'v', 'abbr': 'FunctionType = type(_f)'}, {'word': 'GeneratorType', 'menu': '[I]', 'kind': 'v', 'abbr': 'GeneratorType = type(_g())'}, {'word': 'GetSetDescriptorType', 'menu': '[I]', 'kind': 'v', 'abbr': 'GetSetDescriptorType = type(FunctionType.func_code)'}, {'word': 'InstanceType', 'menu': '[I]', 'kind': 'v', 'abbr': 'InstanceType = type(_x)'}, {'word': 'IntType', 'menu': '[I]', 'kind': 'v', 'abbr': 'IntType = int'}, {'word': 'LambdaType', 'menu': '[I]', 'kind': 'v', 'abbr': 'LambdaType = type(lambda: None) # Same as FunctionType'}, {'word': 'ListType', 'menu': '[I]', 'kind': 'v', 'abbr': 'ListType = list'}, {'word': 'LongType', 'menu': '[I]', 'kind': 'v', 'abbr': 'LongType = long'}, {'word': 'MemberDescriptorType', 'menu': '[I]', 'kind': 'v', 'abbr': 'MemberDescriptorType = type(FunctionType.func_globals)'}, {'word': 'MethodType', 'menu': '[I]', 'kind': 'v', 'abbr': 'MethodType = type(_x._m)'}, {'word': 'ModuleType', 'menu': '[I]', 'kind': 'v', 'abbr': 'ModuleType = type(sys)'}, {'word': 'NoneType', 'menu': '[I]', 'kind': 'v', 'abbr': 'NoneType = type(None)'}, {'word': 'NotImplementedType', 'menu': '[I]', 'kind': 'v', 'abbr': 'NotImplementedType = type(NotImplemented)'}, {'word': 'ObjectType', 'menu': '[I]', 'kind': 'v', 'abbr': 'ObjectType = object'}, {'word': 'SliceType', 'menu': '[I]', 'kind': 'v', 'abbr': 'SliceType = slice'}, {'word': 'StringType', 'menu': '[I]', 'kind': 'v', 'abbr': 'StringType = str'}, {'word': 'StringTypes', 'menu': '[I]', 'kind': 'v', 'abbr': 'StringTypes = (StringType, UnicodeType)'}, {'word': 'TracebackType', 'menu': '[I]', 'kind': 'v', 'abbr': 'TracebackType = type(tb)'}, {'word': 'TupleType', 'menu': '[I]', 'kind': 'v', 'abbr': 'TupleType = tuple'}, {'word': 'TypeType', 'menu': '[I]', 'kind': 'v', 'abbr': 'TypeType = type'}, {'word': 'UnboundMethodType', 'menu': '[I]', 'kind': 'v', 'abbr': 'UnboundMethodType = type(_C._m) # Same as MethodType'}, {'word': 'UnicodeType', 'menu': '[I]', 'kind': 'v', 'abbr': 'UnicodeType = unicode'}, {'word': 'XRangeType', 'menu': '[I]', 'kind': 'v', 'abbr': 'XRangeType = xrange'}, {'word': '_C', 'menu': '[I]', 'kind': 'c', 'abbr': '_C: <class>'}, {'word': '_f', 'menu': '[I]', 'kind': 'f', 'abbr': 'def _f(): pass'}, {'word': '_g', 'menu': '[I]', 'kind': 'f', 'abbr': 'def _g():'}, {'word': '_m', 'menu': '_C', 'kind': 'm', 'abbr': 'def _m(self): pass'}, {'word': '_x', 'menu': '[I]', 'kind': 'v', 'abbr': '_x = _C()'}, {'word': 'tb', 'menu': '[I]', 'kind': 'v', 'abbr': 'tb'}]
